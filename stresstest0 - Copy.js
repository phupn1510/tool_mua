// prepare web3
//import Web3 from 'web3';
var Web3 = require("web3");
const web3 = new Web3(new Web3.providers.HttpProvider("http://10.59.0.51:8501"));
const addresses = [
  "0x0000000000000000000000000000000000000001",
  "0x0000000000000000000000000000000000000002",
  "0x0000000000000000000000000000000000000003",
  "0x0000000000000000000000000000000000000004",
  "0x0000000000000000000000000000000000000005",
  "0x0000000000000000000000000000000000000006",
  "0x0000000000000000000000000000000000000007",
  "0x0000000000000000000000000000000000000008",
  "0x0000000000000000000000000000000000000009",
  "0x0000000000000000000000000000000000000010",
  "0x0000000000000000000000000000000000000011",
  "0x0000000000000000000000000000000000000012",
  "0x0000000000000000000000000000000000000013",
  "0x0000000000000000000000000000000000000014",
  "0x0000000000000000000000000000000000000015",
  "0x0000000000000000000000000000000000000016",
  "0x0000000000000000000000000000000000000017",
  "0x0000000000000000000000000000000000000018",
  "0x0000000000000000000000000000000000000019",
  "0x0000000000000000000000000000000000000020",
  "0x0000000000000000000000000000000000000021",
  "0x0000000000000000000000000000000000000022",
  "0x0000000000000000000000000000000000000023",
  "0x0000000000000000000000000000000000000024",
  "0x0000000000000000000000000000000000000025",
  "0x0000000000000000000000000000000000000026",
  "0x0000000000000000000000000000000000000027",
  "0x0000000000000000000000000000000000000028",
  "0x0000000000000000000000000000000000000029",
  "0x0000000000000000000000000000000000000030",
  "0x0000000000000000000000000000000000000031",
  "0x0000000000000000000000000000000000000032",
  "0x0000000000000000000000000000000000000033",
  "0x0000000000000000000000000000000000000034",
  "0x0000000000000000000000000000000000000035",
  "0x0000000000000000000000000000000000000036",
  "0x0000000000000000000000000000000000000037",
  "0x0000000000000000000000000000000000000038",
  "0x0000000000000000000000000000000000000039",
  "0x0000000000000000000000000000000000000040",
  "0x0000000000000000000000000000000000000041",
  "0x0000000000000000000000000000000000000042",
  "0x0000000000000000000000000000000000000043",
  "0x0000000000000000000000000000000000000044",
  "0x0000000000000000000000000000000000000045",
  "0x0000000000000000000000000000000000000046",
  "0x0000000000000000000000000000000000000047",
  "0x0000000000000000000000000000000000000048",
  "0x0000000000000000000000000000000000000049",
  "0x0000000000000000000000000000000000000050",
]
const test = () => {
console.log("stress test started")
const sender_address = "0xDfb4C6b04d17a700330609A39c17E0284393Afa7"
  const sender_password = "vnptit2018"
Promise.resolve()
  .then((results) => {
    // unlock an account
    return web3.eth.personal.unlockAccount(sender_address,sender_password)

  })
  .then(() => {
    // give away ethers
console.log("addresses count: ", addresses.length)
// promise sequence
    return new Promise((resolve, reject) => {
      let sequence = Promise.resolve()
      for ( let idx=0; idx<addresses.length; idx++ ) {
const receiver = addresses[idx]
sequence = sequence.then(() => {
          // transfer ether
          const params = {
            from: sender_address,
            gas: 5000000,
            to: receiver,
            value: 500000000000,
          }
          // return web3.eth.sendTransaction(params)
          web3.eth.sendTransaction(params)
        })
.then((results) => {
console.log("results: ", results)
if ( idx === ( addresses.length - 1 ) ){
            resolve()
          } else {
            return "OK"
          }
        })
        .catch((err) =>{
          console.log("err: ", err)
          if ( idx === ( addresses.length - 1 ) ){
            resolve()
          } else {
            return "NG"
          }
        })
      }
    })
  })
.then(() => {
    console.log("stress test ended")
  })
.catch((err) => {
    console.log("err: ", err)
  })
}
test();